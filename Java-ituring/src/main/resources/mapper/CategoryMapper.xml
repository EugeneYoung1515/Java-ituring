<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.CategoryMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.model.Category">
    <id column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="grade" jdbcType="INTEGER" property="grade" />
  </resultMap>
  <sql id="Base_Column_List">
    category_id, category_name, grade
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_category
    where category_id = #{categoryId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_category
    where category_id = #{categoryId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo.model.Category">
    insert into t_category (category_id, category_name, grade)
    values (#{categoryId,jdbcType=INTEGER}, #{categoryName,jdbcType=VARCHAR}, #{grade,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.model.Category">
    insert into t_category
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="categoryId != null">
        category_id,
      </if>
      <if test="categoryName != null">
        category_name,
      </if>
      <if test="grade != null">
        grade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="categoryId != null">
        #{categoryId,jdbcType=INTEGER},
      </if>
      <if test="categoryName != null">
        #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.model.Category">
    update t_category
    <set>
      <if test="categoryName != null">
        category_name = #{categoryName,jdbcType=VARCHAR},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=INTEGER},
      </if>
    </set>
    where category_id = #{categoryId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.model.Category">
    update t_category
    set category_name = #{categoryName,jdbcType=VARCHAR},
    grade = #{grade,jdbcType=INTEGER}
    where category_id = #{categoryId,jdbcType=INTEGER}
  </update>

  <resultMap id="CategoryWithAllParentResultMap" type="com.example.demo.extmodel.CategoryExt">
    <id column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <association property="parentGrade" javaType="com.example.demo.extmodel.CategoryExt">
      <id column="p_category_id" jdbcType="INTEGER" property="categoryId" />
      <result column="p_category_name" jdbcType="VARCHAR" property="categoryName" />
      <association property="parentGrade" javaType="com.example.demo.extmodel.CategoryExt">
        <id column="pp_category_id" jdbcType="INTEGER" property="categoryId" />
        <result column="pp_category_name" jdbcType="VARCHAR" property="categoryName" />
      </association>
    </association>
  </resultMap>

  <select id="selectCategoryWithAllParentByPrimaryKey" parameterType="java.lang.Integer" resultMap="CategoryWithAllParentResultMap">
    select
    t.category_id as category_id, t.category_name as category_name,b.category_id as p_category_id, b.category_name as p_category_name,
    bb.category_id as pp_category_id, bb.category_name as pp_category_name
    from t_category as t left outer join t_category_child_category as m on t.category_id = m.child_category_id
    left outer join t_category as b on m.category_id = b.category_id
    left outer join t_category_child_category as mm on b.category_id = mm.child_category_id
    left outer join t_category as bb on mm.category_id = bb.category_id
    where t.category_id = #{categoryId,jdbcType=INTEGER}
  </select>
  <select id="selectChildCategoryByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    b.category_id as category_id, b.category_name as category_name
    from t_category as t left outer join t_category_child_category as m on t.category_id = m.category_id
    left outer join t_category as b on m.child_category_id = b.category_id
    where t.category_id = #{categoryId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" parameterType="java.lang.Integer" resultMap="BaseResultMap"><!--所有大分类-->
    select
    <include refid="Base_Column_List" />
    from t_category
    where grade = 1
  </select>
  <select id="selectParentByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    b.category_id as category_id, b.category_name as category_name
    from t_category as t left outer join t_category_child_category as m on t.category_id = m.child_category_id
    left outer join t_category as b on m.category_id = b.category_id
    where t.category_id = #{categoryId,jdbcType=INTEGER}
  </select>
</mapper>